// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module6_7_Palmer.Models;

namespace Module6_7_Palmer.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Module6_7_Palmer.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            City = "Arlington",
                            EmailAddress = "MoJoJOJO1@example.com",
                            FirstName = "Mojo",
                            LastName = "Jojo",
                            PhoneNumber = "712-909-1207",
                            State = "Texas",
                            Street = "143 Brentwood",
                            Zipcode = "90938"
                        },
                        new
                        {
                            CustomerID = 2,
                            City = "Festus",
                            EmailAddress = "KHalls@example.com",
                            FirstName = "Kevin",
                            LastName = "Hall",
                            PhoneNumber = "314-884-1035",
                            State = "Missouri",
                            Street = "909 Acton",
                            Zipcode = "73644"
                        },
                        new
                        {
                            CustomerID = 3,
                            City = "Wood River",
                            EmailAddress = "Tman29@example.com",
                            FirstName = "Tenton",
                            LastName = "Argusta",
                            PhoneNumber = "618-435-8765",
                            State = "Illinois",
                            Street = "214 Edwardston",
                            Zipcode = "62002"
                        },
                        new
                        {
                            CustomerID = 4,
                            City = "Da Hood",
                            EmailAddress = "SteveO@example.com",
                            FirstName = "Steve",
                            LastName = "O",
                            PhoneNumber = "948-492-0394",
                            State = "Missouri",
                            Street = "84 Da street",
                            Zipcode = "74893"
                        },
                        new
                        {
                            CustomerID = 5,
                            City = "Warrenton",
                            EmailAddress = "AHolmes@example.com",
                            FirstName = "Anthoney",
                            LastName = "Holmes",
                            PhoneNumber = "314-988-5575",
                            State = "Missouri",
                            Street = "123 Something",
                            Zipcode = "28273"
                        });
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("OrderPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("UnitPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "A traditional japaneese Bonsi Tree",
                            Image = "bonsiTree.jpg",
                            Name = "Bonsi Tree",
                            UnitPrice = 19.989999999999998
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "A banana that is a dog",
                            Image = "bananaDog.jpg",
                            Name = "Banana Dog",
                            UnitPrice = 100.98999999999999
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "A friendly chicken",
                            Image = "chicken.jpg",
                            Name = "Chicken",
                            UnitPrice = 2.75
                        },
                        new
                        {
                            ProductID = 4,
                            Description = "A see through digital clock",
                            Image = "digitalClock.jpg",
                            Name = "Digitl Clock",
                            UnitPrice = 35.990000000000002
                        },
                        new
                        {
                            ProductID = 5,
                            Description = "A fancy chair from the future",
                            Image = "fancyChair.jpg",
                            Name = "Fancy Future Chair",
                            UnitPrice = 49.990000000000002
                        },
                        new
                        {
                            ProductID = 6,
                            Description = "Wireless headphones",
                            Image = "headPhones.jpg",
                            Name = "Bluetooth headphones",
                            UnitPrice = 19.989999999999998
                        },
                        new
                        {
                            ProductID = 7,
                            Description = "A mini camera for mini picutres",
                            Image = "miniCamera.jpg",
                            Name = "Mini Camera",
                            UnitPrice = 69.989999999999995
                        },
                        new
                        {
                            ProductID = 8,
                            Description = "A smart coffee maker, make coffee from your phone",
                            Image = "smartCofee.jpg",
                            Name = "Smart Coffee Maker",
                            UnitPrice = 74.989999999999995
                        },
                        new
                        {
                            ProductID = 9,
                            Description = "A smart toaster maker, make toast from your phone",
                            Image = "smartToaster.jpg",
                            Name = "Smart Toaster",
                            UnitPrice = 25.989999999999998
                        },
                        new
                        {
                            ProductID = 10,
                            Description = "Cut watermealons with ease",
                            Image = "waterMelonCutter.jpg",
                            Name = "Watermelon Cutter",
                            UnitPrice = 34.990000000000002
                        });
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.OrderedProduct", b =>
                {
                    b.HasBaseType("Module6_7_Palmer.Models.Product");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasIndex("OrderID");

                    b.HasDiscriminator().HasValue("OrderedProduct");
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.Order", b =>
                {
                    b.HasOne("Module6_7_Palmer.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.OrderedProduct", b =>
                {
                    b.HasOne("Module6_7_Palmer.Models.Order", null)
                        .WithMany("Product")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("Module6_7_Palmer.Models.Order", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
